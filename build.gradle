group = project.peach_group
version = project.peach_version

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${project.lib_kotlin_version}"
        classpath "gradle.plugin.com.github.johnrengelman:shadow:${project.lib_shadow_version}"
        classpath "com.google.protobuf:protobuf-gradle-plugin:${project.lib_protobuf_version}"
    }
}

subprojects {
    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'java'
    apply plugin: 'com.google.protobuf'
    apply plugin: 'kotlin'
    apply plugin: 'kotlin-kapt'

    repositories {
        mavenCentral()
        mavenLocal()

        // Jitpack
        maven {
            url 'https://jitpack.io'
        }

        // Velocity
        maven {
            url 'https://nexus.velocitypowered.com/repository/maven-public/'
        }

        // Paper
        maven {
            url 'https://papermc.io/repo/repository/maven-public/'
        }
    }

    dependencies {
        api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${project.lib_kotlin_version}"
        api "org.jetbrains.kotlin:kotlin-reflect:${project.lib_kotlin_version}"
        api "org.jetbrains.kotlin:kotlin-stdlib:${project.lib_kotlin_version}"
    }

    shadowJar {
        archiveClassifier.set('')
        archiveVersion.set('')
    }

    compileJava {
        targetCompatibility = 17
        sourceCompatibility = 17
    }

    protobuf {
        generatedFilesBaseDir = "$projectDir/src"

        protoc {
            artifact = "com.google.protobuf:protoc:${project.lib_protobuf_protoc_version}"
        }

        plugins {
            grpc {
                artifact = "io.grpc:protoc-gen-grpc-java:${project.lib_grpc_version}"
            }
            grpckt {
                artifact = "io.grpc:protoc-gen-grpc-kotlin:${project.lib_grpckt_version}:jdk7@jar"
            }
        }

        generateProtoTasks {
            ofSourceSet('main').each { task ->
//                if(task.name == 'generateProto') {
//                    if(hasProto) {
                        task.dependsOn += 'clean'
//                    } else {
//                        task.enabled = false
//                    }
//                }

                task.plugins {
                    grpckt {
                        outputSubDir = 'java'
                    }
                    grpc {
                        outputSubDir = 'java'
                    }
                }
            }

        }
    }
}
